@using System.Reflection
@using ncrypt.Server.Model
@using NL = ncrypt.Library

<RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">
    <div class="container p-0">
        <div class="row g-0 p-3">
            <div class="row d-flex justify-content-around align-items-center">
                <div class="col-3">
                    <p style="font-size:30px; text-align:center">@Model.Name</p>
                </div>
                <div class="col-9 d-flex justify-content-around align-items-center">
                    <RadzenSelectBar TValue="String" @bind-Value=@Model.SelectedMethod Data=@Model.ServiceMethodNames />
                </div>
            </div>
            <hr class="my-2" />
            <div class="row">
                <div class="d-flex justify-content-start align-items-center my-1">
                    <div class="col-6 d-flex justify-content-center align-items-center">
                        <h5 class="mb-0 me-1">Input:</h5>
                        <RadzenDropDown TValue="NL.ConvertType" Data=Enum.GetValues(typeof(NL.ConvertType)) @bind-Value=@Model.InputConvertType />
                    </div>
                    <div class="col-6 d-flex justify-content-center align-items-center">
                        <h5 class="mb-0 me-1">Output:</h5>
                        <RadzenDropDown TValue="NL.ConvertType" Data=Enum.GetValues(typeof(NL.ConvertType)) @bind-Value=@Model.OutputConvertType />
                    </div>                    
                </div>
            </div>
            @if (Model.ConstructorParameters.Count () > 0)
            {
                <hr class="my-2" />
                <div class="row">
                    @foreach (var prop in Model.ConstructorParameters)
                    {
                        <div class="d-flex justify-content-start align-items-center mb-1">
                            <h5 class="mb-0 w-25">@(prop.Name):</h5>
                            <_GenericControl OnChange="OnChange" Info=@prop></_GenericControl>
                        </div>
                    }
                </div>                
            }
            @if (Model.GetParametersOfMethod (Model.SelectedMethod).Count () > 0)
            {
                <hr class="my-2" />
                <div class="row">
                    @foreach (var prop in Model.GetParametersOfMethod (Model.SelectedMethod))
                    {
                        <div class="d-flex justify-content-start align-items-center mb-1">
                            <h5 class="mb-0 w-25">@(prop.Name):</h5>
                            <_GenericControl OnChange="OnChange" Info=@prop></_GenericControl>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</RadzenCard>

@code {
    [Parameter]
    public GenericModel Model { get; set; }

    protected void OnChange ((String, Object) pair)
    {
        Model.UpdateResult (pair.Item1, pair.Item2);
    }

    protected override void OnInitialized ()
    {
        base.OnInitialized ();
        Model.SelectedMethod = Model.ServiceMethods.First ().Name;
    }
}
